// <auto-generated />
using System;
using MaguSoft.ComeAndTicket.Core.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MaguSoft.ComeAndTicket.Core.Migrations
{
    [DbContext(typeof(ComeAndTicketContext))]
    [Migration("20200517232620_UsersDevicesAndTitlesToWatch")]
    partial class UsersDevicesAndTitlesToWatch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.Configuration", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.DeviceNickname", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DeviceNickname");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.Market", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Url");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.Movie", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Title");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.MovieTitleToWatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MovieTitleToWatch");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.ShowTime", b =>
                {
                    b.Property<string>("TicketsUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MovieTitle")
                        .HasColumnType("text");

                    b.Property<int?>("SeatsLeft")
                        .HasColumnType("integer");

                    b.Property<string>("TheaterUrl")
                        .HasColumnType("text");

                    b.Property<int>("TicketsStatus")
                        .HasColumnType("integer");

                    b.HasKey("TicketsUrl");

                    b.HasIndex("MovieTitle");

                    b.HasIndex("TheaterUrl");

                    b.ToTable("ShowTimes");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.ShowTimeNotification", b =>
                {
                    b.Property<string>("ShowTimeTicketsUrl")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ShowTimeTicketsUrl", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ShowTimeNotification");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.Theater", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("MarketUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Url");

                    b.HasIndex("MarketUrl");

                    b.ToTable("Theaters");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("HomeMarketUrl")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PushbulletApiKey")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserName")
                        .HasName("User_UserName_Unique");

                    b.HasIndex("HomeMarketUrl");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.DeviceNickname", b =>
                {
                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.User", null)
                        .WithMany("DeviceNicknames")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.MovieTitleToWatch", b =>
                {
                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.User", null)
                        .WithMany("MovieTitlesToWatch")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.ShowTime", b =>
                {
                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.Movie", "Movie")
                        .WithMany("ShowTimes")
                        .HasForeignKey("MovieTitle");

                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.Theater", "Theater")
                        .WithMany("ShowTimes")
                        .HasForeignKey("TheaterUrl");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.ShowTimeNotification", b =>
                {
                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.ShowTime", "ShowTime")
                        .WithMany("UsersUpdated")
                        .HasForeignKey("ShowTimeTicketsUrl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.Theater", b =>
                {
                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.Market", "Market")
                        .WithMany("Theaters")
                        .HasForeignKey("MarketUrl");
                });

            modelBuilder.Entity("MaguSoft.ComeAndTicket.Core.Model.User", b =>
                {
                    b.HasOne("MaguSoft.ComeAndTicket.Core.Model.Market", "HomeMarket")
                        .WithMany()
                        .HasForeignKey("HomeMarketUrl");
                });
#pragma warning restore 612, 618
        }
    }
}
